name: Build UniPaste Application

on:
  push:
    branches: [ main, dev ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          
      - name: Create icon directory if needed
        run: mkdir -p assets
          
      - name: Build macOS application
        run: |
          # Create a spec file to ensure utils module is included
          echo "# -*- mode: python -*-
          block_cipher = None

          a = Analysis(['mac_clip_check.py'],
                      pathex=[],
                      binaries=[],
                      datas=[('LICENSE', '.'), ('utils', 'utils'), ('handlers', 'handlers')],
                      hiddenimports=['AppKit', 'websockets', 'cryptography', 
                                     'utils.security.crypto', 'utils.network.discovery',
                                     'handlers.xxx', 'handlers.yyy'],  # 替换为你的handlers下的模块
                      hookspath=[],
                      hooksconfig={},
                      runtime_hooks=[],
                      excludes=[],
                      win_no_prefer_redirects=False,
                      win_private_assemblies=False,
                      cipher=block_cipher,
                      noarchive=False)
          pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)
          exe = EXE(pyz,
                  a.scripts,
                  a.binaries,
                  a.zipfiles,
                  a.datas,
                  [],
                  name='UniPaste-Mac',
                  debug=False,
                  bootloader_ignore_signals=False,
                  strip=False,
                  upx=True,
                  upx_exclude=[],
                  runtime_tmpdir=None,
                  console=True,
                  disable_windowed_traceback=False,
                  argv_emulation=True,
                  target_arch=None,
                  codesign_identity=None,
                  entitlements_file=None)" > unipaste.spec
          
          # Build using the spec file
          pyinstaller unipaste.spec
          
      - name: Package macOS application
        run: |
          mkdir -p release/macos
          cp dist/UniPaste-Mac release/macos/
          cp README.md release/macos/ || echo "README.md not found"
          cp LICENSE release/macos/ || echo "LICENSE not found"
          chmod +x release/macos/UniPaste-Mac
          
      - name: Upload macOS build
        uses: actions/upload-artifact@v4
        with:
          name: UniPaste-macos
          path: release/macos/

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build Windows application
        run: |
          pyinstaller --onefile --name UniPaste-Win windows_client.py

      - name: Package Windows application
        run: |
          mkdir release\windows
          copy dist\UniPaste-Win.exe release\windows\
          copy README.md release\windows\ || echo "README.md not found"
          copy LICENSE release\windows\ || echo "LICENSE not found"

      - name: Upload Windows build
        uses: actions/upload-artifact@v4
        with:
          name: UniPaste-windows
          path: release/windows/

  create-release:
    needs: [build-macos, build-windows]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: UniPaste-macos
          path: release/macos

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: UniPaste-windows
          path: release/windows

      - name: Create ZIP archives
        run: |
          cd release
          zip -r UniPaste-macos.zip macos
          zip -r UniPaste-windows.zip windows

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/UniPaste-macos.zip
            release/UniPaste-windows.zip
          draft: false
          prerelease: false
